import { AppState } from "@excalidraw/excalidraw/types/types";
import type { ExcalidrawElement } from "@excalidraw/excalidraw/types/element/types";

export type CanvasState = {
  elements: readonly ExcalidrawElement[];
  appState: AppState;
};

export const initialAppState: AppState = {
  isSidebarDocked: false,
  zoom: {
    // @ts-expect-error
    value: 1,
  },
  showWelcomeScreen: false,
  theme: "light",
  // @ts-expect-error
  collaborators: [],
  currentChartType: "bar",
  currentItemBackgroundColor: "transparent",
  currentItemEndArrowhead: "arrow",
  currentItemFillStyle: "hachure",
  currentItemFontFamily: 1,
  currentItemFontSize: 20,
  currentItemOpacity: 100,
  currentItemRoughness: 1,
  currentItemStartArrowhead: null,
  currentItemStrokeColor: "#1e1e1e",
  currentItemRoundness: "round",
  currentItemStrokeStyle: "solid",
  currentItemStrokeWidth: 1,
  currentItemTextAlign: "left",
  cursorButton: "up",
  draggingElement: null,
  editingElement: null,
  editingGroupId: null,
  editingLinearElement: null,
  activeTool: {
    type: "freedraw",
    customType: null,
    locked: false,
    lastActiveTool: null,
  },
  penMode: false,
  penDetected: false,
  errorMessage: null,
  exportBackground: true,
  exportScale: 2,
  exportEmbedScene: false,
  exportWithDarkMode: false,
  fileHandle: null,
  gridSize: null,
  isBindingEnabled: true,
  isLoading: false,
  isResizing: false,
  isRotating: false,
  lastPointerDownWith: "mouse",
  multiElement: null,
  name: "Custom name of drawing",
  contextMenu: null,
  openMenu: null,
  openPopup: null,
  openSidebar: null,
  openDialog: null,
  pasteDialog: { shown: false, data: null },
  previousSelectedElementIds: {},
  resizingElement: null,
  scrolledOutside: false,
  scrollX: 0,
  scrollY: 0,
  selectedElementIds: {},
  selectedGroupIds: {},
  selectionElement: null,
  shouldCacheIgnoreZoom: false,
  showStats: false,
  startBoundElement: null,
  suggestedBindings: [],
  toast: null,
  viewBackgroundColor: "#ffffff",
  zenModeEnabled: false,
  viewModeEnabled: false,
  pendingImageElementId: null,
  showHyperlinkPopup: false,
  selectedLinearElement: null,
  offsetLeft: 58,
  offsetTop: -118.625,
};

export const initialCanvas: CanvasState = {
  elements: [],
  appState: initialAppState,
};
